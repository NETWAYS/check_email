object CheckCommand "check_email" {
  command = [ PluginDir + "/check_email.py" ]

  arguments = {
    "-ih" = {
      value = "$check_email_imap_host$"
      description = "host address or FQDN of the IMAP server"
    }
    "-ip" = {
      value= "$check_email_imap_port$"
      description = "port of the IMAP server (default: 993)"
    }
    "-iusr" = {
      value= "$check_email_imap_user$"
      description = "username for IMAP (default: (env IMAP_USERNAME))"
    }
    "-ipw" = {
      value= "$check_email_imap_password$"
      description = "password for IMAP (default: (env IMAP_PASSWORD))"
    }
    "--imap-mode" = {
      value= "$check_email_imap_mode$"
      description = "imap connection mode (default: ssl) Options: [ssl], [plain]"
    }
    "-sh" = {
      value= "$check_email_smtp_host$"
      description = "host address or FQDN of the SMTP server"
    }
    "-sp" = {
      value= "$check_email_smtp_port$"
      description = "port of the SMTP server (default: 465)"
    }
    "-susr" = {
      value= "$check_email_smtp_user$"
      description = "username for SMTP (default: (env SMTP_USERNAME))"
    }
    "-spw" = {
      value= "$check_email_smtp_password$"
      description = "password for SMTP (default: (env SMTP_PASSWORD))"
    }
    "--smtp-mode" = {
      value = "$check_email_smtp_mode$"
      description = "smtp connection mode (default: ssl) Options: [ssl], [tls]"
    }
    "--sender" = {
      value = "$check_email_sender$"
      description = "Sender email e.g. 'sender@mail.com'"
    }
    "--receiver" = {
      value = "$check_email_receiver$"
      description = "Receiver email e.g. 'receiver@mail.com'"
    }
    "-w" = {
      value = "$check_email_warning$"
      description = "value of warning threshold in seconds (default: 300)"
    }
    "-c" = {
      value = "$check_email_critical$"
      description = "value of critical threshold in seconds (default: 500)"
    }
    "--imap-mailbox" = {
      value = "$check_email_imap_mailbox$"
      description = "mailbox which should be checked (default: INBOX)"
    }
    "--echo-reply" = {
      value = "$check_email_echo_reply$"
      description = "Checks for echo reply from mail server (default: False)"
    }
    "--imap-sender-host" = {
      value = "$check_email_imap_sender_host$"
      description = "host address or FQDN of the IMAP server which sent the mail (default: --smtp-host)"
    }
    "--imap-sender-port" = {
      value = "$check_email_imap_sender_port$"
      description = "port of the IMAP server which sent the mail  (default: 993)"
    }
    "--imap-sender-user" = {
      value = "$check_email_imap_sender_user$"
      description = "username for IMAP, which receive the echo reply (default: --smtp-user)"
    }
    "--imap-sender-password" = {
      value = "$check_email_imap_sender_password$"
      description = "password for IMAP user, which receive the echo reply (default: --smtp-password)"
    }
    "--imap-sender-mailbox" = {
      value = "$check_email_imap_sender_mailbox$"
      description = "mailbox which should be checked for echo reply (default: INBOX)"
    }
    "--critical-reply" = {
      value = "$check_email_critical_reply$"
      description = "critical threshold for echo reply (default: 500)"
    }
    "--warning-reply" = {
      value = "$check_email_warning_reply$"
      description = "warning threshold for echo reply (default: 300)"
    }
    "--cleanup" = {
      value = "$check_email_cleanup$"
      description = "Deletes old mails default: False"
    }
    "--cleanup-time" = {
      value = "$check_email_cleanup_time$"
      description = "Deletes mails older then x seconds (default: 3600)"
    }
    "--reply-name" = {
      value = "$check_email_reply_name$"
      description = "Specifies the name the of the echo reply, e.g. 'My Echo'"
    }
}

object Host "check_email" {
  check_command = "dummy"
  vars.server_type = "email"
}

apply Service "check_email_receive" {
  check_command = "check_email"
  check_timeout = 11m
  check_interval = 10m
  retry_interval = 10m

  vars.check_email_imap_host = "imap.example.com"
  vars.check_email_imap_port = 993
  vars.check_email_imap_user = "receiver@example.de"
  vars.check_email_imap_password = "***"

  vars.check_email_smtp_host = "mail.example.com"
  vars.check_email_smtp_port = "587"
  vars.check_email_smtp_user = "DOMAIN\User"
  vars.check_email_smtp_password = "***"

  vars.check_email_sender = "sender@example.com"
  vars.check_email_receiver = "receiver@example.de"
  vars.check_email_warning = 300
  vars.check_email_critical = 500
  vars.check_email_imap_mailbox = "Monitoring"

  /* Enables the cleanup mode
  vars.check_email_cleanup = "--cleanup"
  vars.check_email_cleanup_time = 300
  */

  assign where host.vars.server_type == "email"
}

apply Service "check_email_loop" {
  check_command = "check_email"
  check_timeout = 11m
  check_interval = 10m
  retry_interval = 10m

  vars.check_email_imap_host = "imap.example.com"
  vars.check_email_imap_port = "993"
  vars.check_email_imap_user = "receiver@example.com"
  vars.check_email_imap_password = "***"

  vars.check_email_smtp_host = "mail.example.com"
  vars.check_email_smtp_port = "587"
  vars.check_email_smtp_user = "DOMAIN\User"
  vars.check_email_smtp_password = "***"

  vars.check_email_sender = "sender@example.com"
  vars.check_email_receiver = "receiver@example.com"
  vars.check_email_warning = 300
  vars.check_email_critical = 500
  vars.check_email_imap_mailbox = "Monitoring"

  vars.check_email_echo_reply = "--echo-reply"
  vars.check_email_reply_name = "Echo Mail"
  vars.check_email_imap_sender_host = "imap.sender.example.com"
  vars.check_email_imap_sender_port = 993
  vars.check_email_imap_sender_user = "DOMAIN\User"
  vars.check_email_imap_sender_password = "***"
  vars.check_email_imap_sender_mailbox = "Monitoring"
  vars.check_email_warning_reply = 300
  vars.check_email_critical_reply = 500

  /* Enables the cleanup mode
  vars.check_email_cleanup = "--cleanup"
  vars.check_email_cleanup_time = 300
  */

  assign where host.vars.server_type == "email"
}
